/*:
 # I/O
 ## Input/Output
 
 Сетевое взаимодействие один из частных случаев операций ввода/вывода.
 
 Фреймворк `Foundation` имеет все необходимое для нас.
 
 В самом простом виде обращение в сеть будет выглядеть так:
 */
import Foundation

let url = URL(string: "https://google.com/")!
let task = URLSession.shared.dataTask(with: url) {
    (data: Data?, response: URLResponse?, error: Error?) in
    //
}
task.resume()
/*:
 Рассмотрим по шагам.
 - Мы создаем `URL` адрес, того что хотим получить
 - Передаем `url` в `URLSession.shared`, которая вовращает нам `task`.
 - Запускаем `task`
 - В замыкании получем результаты выполения `data, response, error`.
 
 - Important: Не забывайте вызвать метод `resume` иначе `task` не будет запущен.
 
 Все взаимодейтсвие проиходит асинхронно и через колбеки: замыкания или делегаты.
 Это связано с тем что мы пишем приложения с UI, а его нельзя замораживат запросом в сеть.
 
 ![Simple request](simple_request.png)
 
 Возможно у вас появилось много вопросах о типах, которые используются в примере. О всех о них будет рассказано далее, но в начале мы сосредоточимся на аргументах *ввода* и *вывода*.
 
 < [Previous](@previous) | [Next](@next) >
 */
